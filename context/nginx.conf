
user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    #include /etc/nginx/conf.d/*.conf;     

    #for websockets
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }
    server {
        listen 80;
        client_max_body_size 4G;

        server_name localhost;
        autoindex on;

        location / {
            #try_files $uri @proxy =404;
            #headers that point to the real origin
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            #websocket proxying
            #proxy_set_header Upgrade $http_upgrade;
            #proxy_set_header Connection $connection_upgrade;

            #modify upstream "Location" response redirect uri's to this server block?
            proxy_redirect off;
            #handle streaming request/responses or other fancy features like Comet, Long polling, or Web sockets, buffering must be turned off
            #but what about 'slow clients' ddosing uvicorn?
            #With buffers, the Nginx proxy will temporarily store the backend's response and then feed this data to the client. If the client is slow, this allows the Nginx server to close the connection to the backend sooner.
            #proxy_buffering off;

            #production
            #proxy_pass unix:/tmp/uvicorn.sock

            #dev
            proxy_pass http://127.0.0.1:8000;
        }

        #location /static/ {
            # add_header access-control-allow-origin *;
            # add_header 'Access-Control-Allow-Origin' 'http://api.localhost';
            # add_header 'Access-Control-Allow-Credentials' 'true';
            # add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
            # add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';
        #    root /docker-work/uvicornn/appdir;
        #}
        location = /index.html {
           root /usr/share/nginx/html;
        }
        
    }

}
